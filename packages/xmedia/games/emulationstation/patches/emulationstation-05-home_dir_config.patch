diff -Naurp emulationstation-268e6c8/es-app/src/main.cpp emulationstation-268e6c8-patch/es-app/src/main.cpp
--- emulationstation-268e6c8/es-app/src/main.cpp	2017-05-11 20:34:54.000000000 +0300
+++ emulationstation-268e6c8-patch/es-app/src/main.cpp	2017-05-11 22:15:36.000000000 +0300
@@ -117,7 +117,7 @@ bool verifyHomeFolderExists()
 {
 	//make sure the config directory exists
 	std::string home = getHomePath();
-	std::string configDir = home + "/.emulationstation";
+	std::string configDir = home + "/emulationstation";
 	if(!fs::exists(configDir))
 	{
 		std::cout << "Creating config directory \"" << configDir << "\"\n";
diff -Naurp emulationstation-268e6c8/es-app/src/scrapers/Scraper.cpp emulationstation-268e6c8-patch/es-app/src/scrapers/Scraper.cpp
--- emulationstation-268e6c8/es-app/src/scrapers/Scraper.cpp	2017-05-11 20:34:49.000000000 +0300
+++ emulationstation-268e6c8-patch/es-app/src/scrapers/Scraper.cpp	2017-05-11 22:16:25.000000000 +0300
@@ -271,7 +271,7 @@ std::string getSaveAsPath(const ScraperS
 	const std::string subdirectory = params.system->getName();
 	const std::string name = params.game->getPath().stem().generic_string() + "-" + suffix;
 
-	std::string path = getHomePath() + "/.emulationstation/downloaded_images/";
+	std::string path = getHomePath() + "/emulationstation/downloaded_images/";
 
 	if(!boost::filesystem::exists(path))
 		boost::filesystem::create_directory(path);
diff -Naurp emulationstation-268e6c8/es-app/src/SystemData.cpp emulationstation-268e6c8-patch/es-app/src/SystemData.cpp
--- emulationstation-268e6c8/es-app/src/SystemData.cpp	2017-05-11 20:34:49.000000000 +0300
+++ emulationstation-268e6c8-patch/es-app/src/SystemData.cpp	2017-05-11 22:18:16.000000000 +0300
@@ -383,7 +383,7 @@ void SystemData::deleteSystems()
 
 std::string SystemData::getConfigPath(bool forWrite)
 {
-	fs::path path = getHomePath() + "/.emulationstation/es_systems.cfg";
+	fs::path path = getHomePath() + "/emulationstation/es_systems.cfg";
 	if(forWrite || fs::exists(path))
 		return path.generic_string();
 
@@ -398,7 +398,7 @@ std::string SystemData::getGamelistPath(
 	if(fs::exists(filePath))
 		return filePath.generic_string();
 
-	filePath = getHomePath() + "/.emulationstation/gamelists/" + mName + "/gamelist.xml";
+	filePath = getHomePath() + "/emulationstation/gamelists/" + mName + "/gamelist.xml";
 	if(forWrite) // make sure the directory exists if we're going to write to it, or crashes will happen
 		fs::create_directories(filePath.parent_path());
 	if(forWrite || fs::exists(filePath))
diff -Naurp emulationstation-268e6c8/es-core/src/InputManager.cpp emulationstation-268e6c8-patch/es-core/src/InputManager.cpp
--- emulationstation-268e6c8/es-core/src/InputManager.cpp	2017-05-11 20:34:49.000000000 +0300
+++ emulationstation-268e6c8-patch/es-core/src/InputManager.cpp	2017-05-11 22:22:43.000000000 +0300
@@ -399,14 +399,14 @@ void InputManager::doOnFinish()
 std::string InputManager::getConfigPath()
 {
 	std::string path = getHomePath();
-	path += "/.emulationstation/es_input.cfg";
+	path += "/emulationstation/es_input.cfg";
 	return path;
 }
 
 std::string InputManager::getTemporaryConfigPath()
 {
 	std::string path = getHomePath();
-	path += "/.emulationstation/es_temporaryinput.cfg";
+	path += "/emulationstation/es_temporaryinput.cfg";
 	return path;
 }
 
diff -Naurp emulationstation-268e6c8/es-core/src/platform.cpp emulationstation-268e6c8-patch/es-core/src/platform.cpp
--- emulationstation-268e6c8/es-core/src/platform.cpp	2017-05-11 20:34:54.000000000 +0300
+++ emulationstation-268e6c8-patch/es-core/src/platform.cpp	2017-05-12 12:22:42.000000000 +0300
@@ -13,29 +13,13 @@ std::string getHomePath()
 {
 	std::string homePath;
 
-	// this should give you something like "/home/YOUR_USERNAME" on Linux and "C:\Users\YOUR_USERNAME\" on Windows
-	const char * envHome = getenv("HOME");
+	// this should give you something like "/storage/.config" on AlexELEC
+	const char * envHome = getenv("HOME_CONFIG");
 	if(envHome != nullptr)
 	{
 		homePath = envHome;
 	}
 
-#ifdef WIN32
-	// but does not seem to work for Windows XP or Vista, so try something else
-	if (homePath.empty()) {
-		const char * envDir = getenv("HOMEDRIVE");
-		const char * envPath = getenv("HOMEPATH");
-		if (envDir != nullptr && envPath != nullptr) {
-			homePath = envDir;
-			homePath += envPath;
-
-			for(unsigned int i = 0; i < homePath.length(); i++)
-				if(homePath[i] == '\\')
-					homePath[i] = '/';
-		}
-	}
-#endif
-
 	// convert path to generic directory seperators
 	boost::filesystem::path genericPath(homePath);
 	return genericPath.generic_string();
diff -Naurp emulationstation-268e6c8/es-core/src/Settings.cpp emulationstation-268e6c8-patch/es-core/src/Settings.cpp
--- emulationstation-268e6c8/es-core/src/Settings.cpp	2017-05-11 20:34:49.000000000 +0300
+++ emulationstation-268e6c8-patch/es-core/src/Settings.cpp	2017-05-11 22:23:16.000000000 +0300
@@ -95,7 +95,7 @@ void saveMap(pugi::xml_document& doc, st
 
 void Settings::saveFile()
 {
-	const std::string path = getHomePath() + "/.emulationstation/es_settings.cfg";
+	const std::string path = getHomePath() + "/emulationstation/es_settings.cfg";
 
 	pugi::xml_document doc;
 
@@ -116,7 +116,7 @@ void Settings::saveFile()
 
 void Settings::loadFile()
 {
-	const std::string path = getHomePath() + "/.emulationstation/es_settings.cfg";
+	const std::string path = getHomePath() + "/emulationstation/es_settings.cfg";
 
 	if(!boost::filesystem::exists(path))
 		return;
diff -Naurp emulationstation-268e6c8/es-core/src/ThemeData.cpp emulationstation-268e6c8-patch/es-core/src/ThemeData.cpp
--- emulationstation-268e6c8/es-core/src/ThemeData.cpp	2017-05-11 20:34:49.000000000 +0300
+++ emulationstation-268e6c8-patch/es-core/src/ThemeData.cpp	2017-05-11 22:24:31.000000000 +0300
@@ -413,7 +413,7 @@ const std::shared_ptr<ThemeData>& ThemeD
 	{
 		theme = std::shared_ptr<ThemeData>(new ThemeData());
 
-		const std::string path = getHomePath() + "/.emulationstation/es_theme_default.xml";
+		const std::string path = getHomePath() + "/emulationstation/es_theme_default.xml";
 		if(fs::exists(path))
 		{
 			try
@@ -483,7 +483,7 @@ std::map<std::string, ThemeSet> ThemeDat
 	static const size_t pathCount = 2;
 	fs::path paths[pathCount] = { 
 		"/etc/emulationstation/themes", 
-		getHomePath() + "/.emulationstation/themes" 
+		getHomePath() + "/emulationstation/themes" 
 	};
 
 	fs::directory_iterator end;
